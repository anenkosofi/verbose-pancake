{"mappings":"YAAA,IAAMA,EAAeC,SAASC,cAAc,qBAE5CC,OAAOC,iBAAiB,UAExB,WACE,IAAMC,EAAeF,OAAOG,YACtBC,EAAaN,SAASO,KAAKC,aAE3BC,EADiBP,OAAOQ,SACcJ,EAAaF,GAAiB,IAC1EL,EAAaY,MAAMC,MAAQ,GAAoBC,OAAjBJ,EAAiB,I,ICTjD,IAAMK,EAAOd,SAASC,cAAc,kBAC9Bc,EAAWf,SAASC,cAAc,aAClCe,EAAQhB,SAASC,cAAc,UAC/BgB,EAAmBjB,SAASC,cAAc,eAC1CiB,EAAsBlB,SAASC,cAAc,kBAC7CkB,EAAoBnB,SAASC,cAAc,gBAE3CmB,EAAS,mBACTC,EAAU,0CACVC,EACJ,wFACIC,EACJ,2FACIC,EAAa,wBACbC,EAAa,yBAEbC,EAAa,CACjBC,KAAM,GACNC,QAAS,GACTC,MAAO,IAGTf,EAAKX,iBAAiB,SAItB,SAAsB2B,GACpB,IAAMC,EAAQD,EAAEE,OACVC,EAAYF,EAAMJ,KAClBO,EAAaH,EAAMI,MAEzBT,EAAWO,GAAaC,EAoC1B,SAAuBD,EAAWC,GAChC,IAAME,EAAepC,SAASC,cAAc,IAAcY,OAAVoB,EAAU,WACtDI,EAAe,GAEdH,EAAWI,OAES,SAAdL,GAAyBb,EAAUmB,KAAKL,GAE1B,YAAdD,GAA4Bb,EAAUmB,KAAKL,GAE7B,UAAdD,GAA0BZ,EAAWkB,KAAKL,KACnDG,EAAeb,GAFfa,EAAed,EAFfc,EAAef,EAFfe,EAAeZ,EASjBW,EAAaI,YAAcH,C,CAjD3BI,CAAcR,EAAWC,E,IAR3BpB,EAAKX,iBAAiB,UAWtB,SAAuB2B,GACrBA,EAAEY,iBACF,IAAMC,EAAQ,CACZhB,KAAM,GACNC,QAAS,GACTC,MAAO,IAGHF,EAAOD,EAAWC,KAClBC,EAAUF,EAAWE,QACrBC,EAAQH,EAAWG,MACnBe,EAAcjB,EAAKW,QAAUlB,EAAUmB,KAAKZ,GAC5CkB,EAAiBjB,EAAQU,QAAUlB,EAAUmB,KAAKX,GAClDkB,EAAejB,EAAMS,QAAUjB,EAAWkB,KAAKV,GACrDc,EAAMhB,KAAQiB,EAA0B,GAAZtB,EAC5BqB,EAAMf,QAAWiB,EAAgC,GAAftB,EAClCoB,EAAMd,MAASiB,EAA4B,GAAbtB,EACVoB,GAAeC,GAAkBC,GAiCrDC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUxB,IAzBhDI,EAAEE,OAAOmB,QACe,UAApBzB,EAAWC,OA0CXyB,EAAc,IAAIC,KAElBC,EAAMF,EAAYG,UAAUC,WAAWC,SAAS,EAAG,KACnDC,GAASN,EAAYO,WAAa,GAAGH,WAAWC,SAAS,EAAG,KAC5DG,EAAOR,EAAYS,cAlBnBC,EAoBC,GAAYjD,OAAT6C,EAAM,KAAU7C,OAAPyC,EAAI,KAAQzC,OAAL+C,GAnBpBG,EAAS,qCACyBlD,OADYa,EAAWC,KAAK,oDACvBd,OAALiD,EAAK,kFAC7C9C,EAAMgD,mBAAmB,YAAaD,GACtC/D,SAASO,KAAKI,MAAMsD,SAAW,SAC/BlD,EAASmD,UAAUC,OAAO,aAE1BC,YAAW,WACTrD,EAASmD,UAAUG,IAAI,aACvBrE,SAASO,KAAKI,MAAMsD,SAAW,S,GAC9B,QA5CDhD,EAAiBuB,YAAcG,EAAMhB,KACrCT,EAAoBsB,YAAcG,EAAMf,QACxCT,EAAkBqB,YAAcG,EAAMd,OA+B1C,IACQiC,EACAC,EAaAX,EAEAE,EACAI,EACAE,C,IC3GR,IAAMU,EAAgBtE,SAASC,cAAc,SAEvCsE,GAAO,IAAIlB,MAAOQ,cAExBS,EAAcE,UAAYD,C","sources":["src/js/progress-bar.js","src/js/getFormData.js","src/js/setSystemDate.js"],"sourcesContent":["const progressLine = document.querySelector('.header__progress');\n\nwindow.addEventListener('scroll', updateProgressLine);\n\nfunction updateProgressLine() {\n  const windowHeight = window.innerHeight;\n  const pageHeight = document.body.clientHeight;\n  const scrolledHeight = window.scrollY;\n  const scrollPercentage = (scrolledHeight / (pageHeight - windowHeight)) * 100;\n  progressLine.style.width = `${scrollPercentage}%`;\n}\n","const form = document.querySelector('.sign-up__form');\nconst backdrop = document.querySelector('.backdrop');\nconst modal = document.querySelector('.modal');\nconst nameErrorElement = document.querySelector('#name-error');\nconst surnameErrorElement = document.querySelector('#surname-error');\nconst emailErrorElement = document.querySelector('#email-error');\n\nconst nameRegex = /^[A-Z][a-zA-Z]*$/;\nconst emailRegex = /^[\\w\\.-]+@[a-zA-Z\\d\\.-]+\\.[a-zA-Z]{2,}$/;\nconst nameError =\n  'Name must start with an uppercase letter and contain only Latin letters and no spaces';\nconst surnameError =\n  'Surname must start with an uppercase letter and contain only Latin letters and no spaces';\nconst emailError = 'Invalid email format.';\nconst emptyError = 'This field is required';\n\nconst formValues = {\n  name: '',\n  surname: '',\n  email: '',\n};\n\nform.addEventListener('input', inputHandler);\n\nform.addEventListener('submit', submitHandler);\n\nfunction inputHandler(e) {\n  const input = e.target;\n  const fieldName = input.name;\n  const fieldValue = input.value;\n\n  formValues[fieldName] = fieldValue;\n  validateField(fieldName, fieldValue);\n}\n\nfunction submitHandler(e) {\n  e.preventDefault();\n  const error = {\n    name: '',\n    surname: '',\n    email: '',\n  };\n\n  const name = formValues.name;\n  const surname = formValues.surname;\n  const email = formValues.email;\n  const isNameValid = name.length && nameRegex.test(name);\n  const isSurnameValid = surname.length && nameRegex.test(surname);\n  const isEmailValid = email.length && emailRegex.test(email);\n  error.name = !isNameValid ? nameError : '';\n  error.surname = !isSurnameValid ? surnameError : '';\n  error.email = !isEmailValid ? emailError : '';\n  const isFormValid = isNameValid && isSurnameValid && isEmailValid;\n\n  if (!isFormValid) {\n    nameErrorElement.textContent = error.name;\n    surnameErrorElement.textContent = error.surname;\n    emailErrorElement.textContent = error.email;\n  } else {\n    saveFormDataToLocalStorage();\n    e.target.reset();\n    if (formValues.name === 'Sigma') {\n      showGreetingAnimation();\n    }\n  }\n}\n\nfunction validateField(fieldName, fieldValue) {\n  const errorElement = document.querySelector(`#${fieldName}-error`);\n  let errorMessage = '';\n\n  if (!fieldValue.length) {\n    errorMessage = emptyError;\n  } else if (fieldName === 'name' && !nameRegex.test(fieldValue)) {\n    errorMessage = nameError;\n  } else if (fieldName === 'surname' && !nameRegex.test(fieldValue)) {\n    errorMessage = surnameError;\n  } else if (fieldName === 'email' && !emailRegex.test(fieldValue)) {\n    errorMessage = emailError;\n  }\n\n  errorElement.textContent = errorMessage;\n}\n\nfunction saveFormDataToLocalStorage() {\n  localStorage.setItem('formValues', JSON.stringify(formValues));\n}\n\nfunction showGreetingAnimation() {\n  const date = getDate();\n  const markup = `<h1 class=\"modal__heading\">Hello, ${formValues.name}!</h1>\n    <p class=\"modal__description\">Today ${date}, for users with your name, there's a 120% discount when placing an order!</p>`;\n  modal.insertAdjacentHTML('beforeend', markup);\n  document.body.style.overflow = 'hidden';\n  backdrop.classList.remove('is-hidden');\n\n  setTimeout(() => {\n    backdrop.classList.add('is-hidden');\n    document.body.style.overflow = 'visible';\n  }, 5000);\n}\n\nfunction getDate() {\n  const currentDate = new Date();\n\n  const day = currentDate.getDate().toString().padStart(2, '0');\n  const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n  const year = currentDate.getFullYear();\n\n  return `${month}.${day}.${year}`;\n}\n","const timeContainer = document.querySelector('#time');\n\nconst year = new Date().getFullYear();\n\ntimeContainer.innerHTML = year;\n"],"names":["$c5893106153fda60$var$progressLine","document","querySelector","window","addEventListener","windowHeight","innerHeight","pageHeight","body","clientHeight","scrollPercentage","scrollY","style","width","concat","$135812dcf10057b1$var$form","$135812dcf10057b1$var$backdrop","$135812dcf10057b1$var$modal","$135812dcf10057b1$var$nameErrorElement","$135812dcf10057b1$var$surnameErrorElement","$135812dcf10057b1$var$emailErrorElement","$135812dcf10057b1$var$nameRegex","$135812dcf10057b1$var$emailRegex","$135812dcf10057b1$var$nameError","$135812dcf10057b1$var$surnameError","$135812dcf10057b1$var$emailError","$135812dcf10057b1$var$emptyError","$135812dcf10057b1$var$formValues","name","surname","email","e","input","target","fieldName","fieldValue","value","errorElement","errorMessage","length","test","textContent","$135812dcf10057b1$var$validateField","preventDefault","error","isNameValid","isSurnameValid","isEmailValid","localStorage","setItem","JSON","stringify","reset","currentDate","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","date","markup","insertAdjacentHTML","overflow","classList","remove","setTimeout","add","$601f412c7ed0455b$var$timeContainer","$601f412c7ed0455b$var$year","innerHTML"],"version":3,"file":"index.de518b43.js.map"}